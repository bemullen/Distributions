from numpy.random import seed, uniform,randint, exponential
import argparse
import math
import hashlib, binascii
import time
import matplotlib.mlab as mlab
import matplotlib.pyplot as plt
import numpy as np
from scipy import stats
from collections import Counter
from scipy.stats import binom
from scipy.stats import poisson
import pandas as pd
import random

class RandVar:

    #will use a uniform random genrator and returns a random value that is distributed according                                               
    # to an exponential distribution with mean of T = 1/$\lambda$                                                                              
    # you pass in the lambda (arrival rate)                                                                                                    

    def exp(sample,lam):
        #sample = np.random.uniform(0,1)                                                                                                       
        x = (-math.log(1-sample))/lam
        return x

# test for sanity                                                                                                                              

num_trials = 1000
uni = sorted([random.random() for x in range(num_trials)])
expi = [RandVar.exp(x, 4) for x in uni]
#                                                                                                                                              
theo = [x*.001 for x in range(num_trials)]
theox = [RandVar.exp(x,4)for x in theo ]



plt.xlabel("Exponential distribution variable")
plt.ylabel("Uniform random variable")

plt.plot(expi,uni)
plt.plot(theox,theo, 'w--')
plt.show()
